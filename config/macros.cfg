[gcode_macro PAUSE]
description: Pause the actual running print
  Usage: PAUSE
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate safe lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}

  {% if printer['pause_resume'].is_paused|int == 0 %}
  # Increase timeout to 3 hours unless already higher
    {% set timeout = printer.configfile.settings.idle_timeout.timeout %}
    { "SET_IDLE_TIMEOUT TIMEOUT=10800" if timeout < 10800 }

    PAUSE_BASE

    G91 ; use relative coords
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90 ; use absolute coords
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  
  {% if printer['pause_resume'].is_paused|int == 1 %}
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91 ; use relative coords
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

    {% set timeout = printer.configfile.settings.idle_timeout.timeout %}
    SET_IDLE_TIMEOUT TIMEOUT={timeout} ; restore idle timeout

  {% endif %}

[gcode_macro M600]
description: Filament replacement
  Usage: M600
gcode:
;    {% set X = params.X|default(50)|float %}
;    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(25)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    ;PAUSE_FOR_M600
    PAUSE
    G91 ; use relative coords
    G1 E-.8 F2700 ; retract filament a little
    G1 Z{Z} ; lift the head
;    G90 ; use absolute coords
;    G1 X{X} Y{Y} F3000 ; park position
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro UNLOAD_FILAMENT]
description: Filament replacement
  Usage: UNLOAD_FILAMENT
gcode:
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state
    G91 ; use relative coords
    G1 E-50 F1000 ; retract filament a lot
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state

[gcode_macro LOAD_FILAMENT]
description: Filament replacement
  Usage: LOAD_FILAMENT
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    G91 ; use relative coords
    G1 E50 F1000 ; extrude filament a lot
    RESPOND TYPE=command MSG='10 sec delay'
    G4 P10000 ; 10 sec delay
    RESPOND TYPE=command MSG='10 sec delay over'
    G1 E-1 F1000 ; retract filament a little to prevent forming blob
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE

#    Use this command resume during a mid print filament swap (DONT USE OCTO/MAINSAIL/DWC RESUME)
[gcode_macro SWAP_RESUME] 
gcode:
  RESTORE_GCODE_STATE NAME=M600_state
  SET_FILAMENT_SENSOR SENSOR=e0_runout ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=e1_runout ENABLE=1
  resume

[gcode_macro G29]				#界面中增加G29指令
gcode:
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200
  # save_config

########################### UNUSED ########################

[gcode_macro M600_new_UNUSED]
########### Gcode ############
gcode:
  {% set X = params.X|default(printer.configfile.config["stepper_x"]["position_endstop"]|string)|int %}
  {% set Y = params.Y|default(printer.configfile.config["stepper_y"]["position_endstop"]|string)|int %}
  {% set Z = params.Z|default(10)|int %}
  {% set E = params.E|default(-20)|int %}
  {% set tool = params.tool|default(0)|int %}

  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  G91
  G1 E-5 F4000
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000        ;park position
  G0 E10 F500                ;extrude filament to get better blob on end
  G0 E{E} F600             ;retract additional filament to move out of melt zone
  G92 E0
  SET_FILAMENT_SENSOR SENSOR=e{TOOL}_runout ENABLE=0

[gcode_macro PAUSE_FOR_M600_UNUSED]
description: Pause the actual running print for M600 command
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_minimum.y|float + 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% set timeout = printer.configfile.settings.idle_timeout.timeout %}

  PAUSE_BASE

  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
  